#include "displayUtils.h"

const uint8_t ASCIIto7Seg[78] = {
  /*  -     .     /     0     1     2     3     4     5     6     7     8     9     :     ;     <     */
      0x40, 0x00, 0x52, 0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F, 0x00, 0x00, 0x00,
  /*  =     >     ?     @     A     B     C     D     E     F     G     H     I     J     K     L     */
      0x00, 0x00, 0x53, 0x00, 0x77, 0x7F, 0x39, 0x5E, 0x79, 0x71, 0x3D, 0x76, 0x30, 0x1E, 0x75, 0x38,
  /*  M     N     O     P     Q     R     S     T     U     V     W     X     Y     Z     [     \     */
      0x55, 0x37, 0x3F, 0x73, 0x67, 0x33, 0x6D, 0x78, 0x3E, 0x1C, 0x1D, 0x76, 0x6E, 0x5B, 0x39, 0x64,
  /*  ]     ^     _     `     a     b     c     d     e     f     g     h     i     j     k     l     */
      0x0F, 0x01, 0x08, 0x00, 0x5F, 0x7C, 0x58, 0x5E, 0x7B, 0x71, 0x6F, 0x74, 0x10, 0x0D, 0x75, 0x38,
  /*  m     n     o     p     q     r     s     t     u     v     w     x     y     z                 */
      0x55, 0x54, 0x5C, 0x73, 0x67, 0x50, 0x6D, 0x78, 0x1C, 0x1C, 0x1D, 0x14, 0x6E, 0x5B
};

uint8_t encodeChar(uint8_t chr) {
  if (chr < (uint8_t)'-' || chr > (uint8_t)'z')
    return 0x00;
  return ASCIIto7Seg[chr - '-'];
}

void stringToSegmentsArray(const String& str, uint8_t* buffer) {
  for (int i = 0; i < str.length(); ++i) {
    buffer[i] = encodeChar(str[i]);
  }
  for (int i = str.length(); i < 4; ++i) {
    buffer[i] = 0;
  }
}
